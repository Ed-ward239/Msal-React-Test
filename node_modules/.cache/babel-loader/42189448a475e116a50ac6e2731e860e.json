{"ast":null,"code":"/*! @azure/msal-common v13.0.0 2023-05-01 */\n'use strict';\n\nimport { __extends } from '../../_virtual/_tslib.js';\nimport { PerformanceClient } from './PerformanceClient.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar StubPerformanceMeasurement =\n/** @class */\nfunction () {\n  function StubPerformanceMeasurement() {}\n  /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n\n\n  StubPerformanceMeasurement.prototype.startMeasurement = function () {};\n  /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n\n\n  StubPerformanceMeasurement.prototype.endMeasurement = function () {};\n\n  StubPerformanceMeasurement.prototype.flushMeasurement = function () {\n    return null;\n  };\n\n  return StubPerformanceMeasurement;\n}();\n\nvar StubPerformanceClient =\n/** @class */\nfunction (_super) {\n  __extends(StubPerformanceClient, _super);\n\n  function StubPerformanceClient() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  StubPerformanceClient.prototype.generateId = function () {\n    return \"callback-id\";\n  };\n\n  StubPerformanceClient.prototype.startPerformanceMeasuremeant = function () {\n    return new StubPerformanceMeasurement();\n  };\n\n  StubPerformanceClient.prototype.startPerformanceMeasurement = function () {\n    return new StubPerformanceMeasurement();\n  };\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n\n\n  StubPerformanceClient.prototype.calculateQueuedTime = function (preQueueTime, currentTime) {\n    return 0;\n  };\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n\n\n  StubPerformanceClient.prototype.addQueueMeasurement = function (eventName, correlationId, queueTime) {\n    return;\n  };\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n\n\n  StubPerformanceClient.prototype.setPreQueueTime = function (eventName, correlationId) {\n    return;\n  };\n\n  return StubPerformanceClient;\n}(PerformanceClient);\n\nexport { StubPerformanceClient, StubPerformanceMeasurement };","map":{"version":3,"mappings":";;;;;AAAA;;;AAGG;;AAOH;AAAA;AAAA;EAAA,uCASC;;;;EAPGA,0BAAgB,UAAhB,CAAgBC,gBAAhB,gBAA4B,CAA5B;;;;EAEAD,0BAAc,UAAd,CAAcE,cAAd,gBAA0B,CAA1B;;EACAF;IACI,OAAO,IAAP;EACH,CAFD;;EAIJ,OAACA,0BAAD;AAAC,CATD;;AAWA;AAAA;AAAA;EAA2CG,SAAiB,+BAAjB;;EAA3C;;EA4BC;;EA3BGC;IACI,OAAO,aAAP;EACH,CAFD;;EAIAA;IACI,OAAO,IAAIJ,0BAAJ,EAAP;EACH,CAFD;;EAIAI;IACI,OAAO,IAAIJ,0BAAJ,EAAP;EACH,CAFD;;;;EAKAI,gEAAoBC,YAApB,EAA0CC,WAA1C,EAA6D;IACzD,OAAO,CAAP;EACH,CAFD;;;;EAKAF,gEAAoBG,SAApB,EAAkDC,aAAlD,EAAyEC,SAAzE,EAA0F;IACtF;EACH,CAFD;;;;EAKAL,4DAAgBG,SAAhB,EAA8CC,aAA9C,EAAgF;IAC5E;EACH,CAFD;;EAIJ,OAACJ,qBAAD;AA5BA,EAA2CM,iBAA3C","names":["StubPerformanceMeasurement","startMeasurement","endMeasurement","__extends","StubPerformanceClient","preQueueTime","currentTime","eventName","correlationId","queueTime","PerformanceClient"],"sources":["/Users/edwardlee/Downloads/msal-react-demo/node_modules/@azure/msal-common/src/telemetry/performance/StubPerformanceClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IPerformanceClient } from \"./IPerformanceClient\";\nimport { IPerformanceMeasurement } from \"./IPerformanceMeasurement\";\nimport { PerformanceClient } from \"./PerformanceClient\";\nimport { PerformanceEvents } from \"./PerformanceEvent\";\n\nexport class StubPerformanceMeasurement implements IPerformanceMeasurement {\n    /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n    startMeasurement(): void { }\n    /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n    endMeasurement(): void { }\n    flushMeasurement(): number | null {\n        return null;\n    }\n    \n}\n\nexport class StubPerformanceClient extends PerformanceClient implements IPerformanceClient {\n    generateId(): string {\n        return \"callback-id\";\n    }\n    \n    startPerformanceMeasuremeant(): IPerformanceMeasurement {\n        return new StubPerformanceMeasurement();\n    }\n\n    startPerformanceMeasurement(): IPerformanceMeasurement {\n        return new StubPerformanceMeasurement();\n    }\n\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n    calculateQueuedTime(preQueueTime: number, currentTime: number): number {\n        return 0;\n    }\n\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n    addQueueMeasurement(eventName: PerformanceEvents, correlationId: string, queueTime: number): void {\n        return;\n    }\n\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n    setPreQueueTime(eventName: PerformanceEvents, correlationId?: string | undefined): void {\n        return;\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}