{"ast":null,"code":"/*! @azure/msal-browser v2.37.0 2023-05-01 */\n'use strict';\n\nimport { BrowserConfigurationAuthError } from '../error/BrowserConfigurationAuthError.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar stubbedPublicClientApplication = {\n  initialize: function () {\n    return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n  },\n  acquireTokenPopup: function () {\n    return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n  },\n  acquireTokenRedirect: function () {\n    return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n  },\n  acquireTokenSilent: function () {\n    return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n  },\n  acquireTokenByCode: function () {\n    return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n  },\n  getAllAccounts: function () {\n    return [];\n  },\n  getAccountByHomeId: function () {\n    return null;\n  },\n  getAccountByUsername: function () {\n    return null;\n  },\n  getAccountByLocalId: function () {\n    return null;\n  },\n  handleRedirectPromise: function () {\n    return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n  },\n  loginPopup: function () {\n    return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n  },\n  loginRedirect: function () {\n    return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n  },\n  logout: function () {\n    return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n  },\n  logoutRedirect: function () {\n    return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n  },\n  logoutPopup: function () {\n    return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n  },\n  ssoSilent: function () {\n    return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n  },\n  addEventCallback: function () {\n    return null;\n  },\n  removeEventCallback: function () {\n    return;\n  },\n  addPerformanceCallback: function () {\n    return \"\";\n  },\n  removePerformanceCallback: function () {\n    return false;\n  },\n  enableAccountStorageEvents: function () {\n    return;\n  },\n  disableAccountStorageEvents: function () {\n    return;\n  },\n  getTokenCache: function () {\n    throw BrowserConfigurationAuthError.createStubPcaInstanceCalledError();\n  },\n  getLogger: function () {\n    throw BrowserConfigurationAuthError.createStubPcaInstanceCalledError();\n  },\n  setLogger: function () {\n    return;\n  },\n  setActiveAccount: function () {\n    return;\n  },\n  getActiveAccount: function () {\n    return null;\n  },\n  initializeWrapperLibrary: function () {\n    return;\n  },\n  setNavigationClient: function () {\n    return;\n  },\n  getConfiguration: function () {\n    throw BrowserConfigurationAuthError.createStubPcaInstanceCalledError();\n  }\n};\nexport { stubbedPublicClientApplication };","map":{"version":3,"mappings":"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","names":["stubbedPublicClientApplication","initialize","Promise","reject","BrowserConfigurationAuthError","createStubPcaInstanceCalledError","acquireTokenPopup","acquireTokenRedirect","acquireTokenSilent","acquireTokenByCode","getAllAccounts","getAccountByHomeId","getAccountByUsername","getAccountByLocalId","handleRedirectPromise","loginPopup","loginRedirect","logout","logoutRedirect","logoutPopup","ssoSilent","addEventCallback","removeEventCallback","addPerformanceCallback","removePerformanceCallback","enableAccountStorageEvents","disableAccountStorageEvents","getTokenCache","getLogger","setLogger","setActiveAccount","getActiveAccount","initializeWrapperLibrary","setNavigationClient","getConfiguration"],"sources":["/Users/edwardlee/Downloads/msal-react-demo/node_modules/@azure/msal-browser/src/app/IPublicClientApplication.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthenticationResult, AccountInfo, Logger, PerformanceCallbackFunction } from \"@azure/msal-common\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest\";\r\nimport { PopupRequest } from \"../request/PopupRequest\";\r\nimport { SilentRequest } from \"../request/SilentRequest\";\r\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\r\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\r\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\r\nimport { WrapperSKU } from \"../utils/BrowserConstants\";\r\nimport { INavigationClient } from \"../navigation/INavigationClient\";\r\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\r\nimport { ITokenCache } from \"../cache/ITokenCache\";\r\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest\";\r\nimport { BrowserConfiguration } from \"../config/Configuration\";\r\n\r\nexport interface IPublicClientApplication {\r\n    initialize(): Promise<void>;\r\n    acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult>;\r\n    acquireTokenRedirect(request: RedirectRequest): Promise<void>;\r\n    acquireTokenSilent(silentRequest: SilentRequest): Promise<AuthenticationResult>;\r\n    acquireTokenByCode(request: AuthorizationCodeRequest): Promise<AuthenticationResult>;\r\n    addEventCallback(callback: Function): string | null;\r\n    removeEventCallback(callbackId: string): void;\r\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string;\r\n    removePerformanceCallback(callbackId: string): boolean;\r\n    enableAccountStorageEvents(): void;\r\n    disableAccountStorageEvents(): void;\r\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null;\r\n    getAccountByLocalId(localId: string): AccountInfo | null;\r\n    getAccountByUsername(userName: string): AccountInfo | null;\r\n    getAllAccounts(): AccountInfo[];\r\n    handleRedirectPromise(hash?: string): Promise<AuthenticationResult | null>;\r\n    loginPopup(request?: PopupRequest): Promise<AuthenticationResult>;\r\n    loginRedirect(request?: RedirectRequest): Promise<void>;\r\n    logout(logoutRequest?: EndSessionRequest): Promise<void>;\r\n    logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void>;\r\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void>;\r\n    ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult>;\r\n    getTokenCache(): ITokenCache;\r\n    getLogger(): Logger;\r\n    setLogger(logger: Logger): void;\r\n    setActiveAccount(account: AccountInfo | null): void;\r\n    getActiveAccount(): AccountInfo | null;\r\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void;\r\n    setNavigationClient(navigationClient: INavigationClient): void;\r\n    getConfiguration(): BrowserConfiguration;\r\n}\r\n\r\nexport const stubbedPublicClientApplication: IPublicClientApplication = {\r\n    initialize: () => {\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\r\n    },\r\n    acquireTokenPopup: () => {\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\r\n    },\r\n    acquireTokenRedirect: () => {\t\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\r\n    },\t\r\n    acquireTokenSilent: () => {\t\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\r\n    },\r\n    acquireTokenByCode: () => {\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\r\n    },\r\n    getAllAccounts: () => {\r\n        return [];\t\r\n    },\t\r\n    getAccountByHomeId: () => {\r\n        return null;\r\n    },\r\n    getAccountByUsername: () => {\t\r\n        return null;\t\r\n    },\t\r\n    getAccountByLocalId: () => {\r\n        return null;\r\n    },\r\n    handleRedirectPromise: () => {\t\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\r\n    },\t\r\n    loginPopup: () => {\t\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\r\n    },\t\r\n    loginRedirect: () => {\t\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\r\n    },\t\r\n    logout: () => {\t\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\r\n    },\t\r\n    logoutRedirect: () => {\t\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\r\n    },\r\n    logoutPopup: () => {\t\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\r\n    },\r\n    ssoSilent: () => {\t\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\r\n    },\r\n    addEventCallback: () => {\r\n        return null;\r\n    },\r\n    removeEventCallback: () => {\r\n        return;\r\n    },\r\n    addPerformanceCallback: () => {\r\n        return \"\";\r\n    },\r\n    removePerformanceCallback: () => {\r\n        return false;\r\n    },\r\n    enableAccountStorageEvents: () => {\r\n        return;\r\n    },\r\n    disableAccountStorageEvents: () => {\r\n        return;\r\n    },\r\n    getTokenCache: () => {\r\n        throw BrowserConfigurationAuthError.createStubPcaInstanceCalledError();\r\n    },\r\n    getLogger: () => {\r\n        throw BrowserConfigurationAuthError.createStubPcaInstanceCalledError();\r\n    },\r\n    setLogger: () => {\r\n        return;\r\n    },\r\n    setActiveAccount: () => {\r\n        return;\r\n    },\r\n    getActiveAccount: () => {\r\n        return null;\r\n    },\r\n    initializeWrapperLibrary: () => {\r\n        return;\r\n    },\r\n    setNavigationClient: () => {\r\n        return;\r\n    },\r\n    getConfiguration: () => {\r\n        throw BrowserConfigurationAuthError.createStubPcaInstanceCalledError();\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}