{"ast":null,"code":"/*! @azure/msal-common v13.0.0 2023-05-01 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { Constants } from '../utils/Constants.js';\nimport { AuthError } from './AuthError.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\r\n */\n\nvar InteractionRequiredServerErrorMessage = [\"interaction_required\", \"consent_required\", \"login_required\"];\nvar InteractionRequiredAuthSubErrorMessage = [\"message_only\", \"additional_action\", \"basic_action\", \"user_password_expired\", \"consent_required\"];\n/**\r\n * Interaction required errors defined by the SDK\r\n */\n\nvar InteractionRequiredAuthErrorMessage = {\n  noTokensFoundError: {\n    code: \"no_tokens_found\",\n    desc: \"No refresh token found in the cache. Please sign-in.\"\n  },\n  native_account_unavailable: {\n    code: \"native_account_unavailable\",\n    desc: \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\"\n  }\n};\n/**\r\n * Error thrown when user interaction is required.\r\n */\n\nvar InteractionRequiredAuthError =\n/** @class */\nfunction (_super) {\n  __extends(InteractionRequiredAuthError, _super);\n\n  function InteractionRequiredAuthError(errorCode, errorMessage, subError, timestamp, traceId, correlationId, claims) {\n    var _this = _super.call(this, errorCode, errorMessage, subError) || this;\n\n    Object.setPrototypeOf(_this, InteractionRequiredAuthError.prototype);\n    _this.timestamp = timestamp || Constants.EMPTY_STRING;\n    _this.traceId = traceId || Constants.EMPTY_STRING;\n    _this.correlationId = correlationId || Constants.EMPTY_STRING;\n    _this.claims = claims || Constants.EMPTY_STRING;\n    _this.name = \"InteractionRequiredAuthError\";\n    return _this;\n  }\n  /**\r\n   * Helper function used to determine if an error thrown by the server requires interaction to resolve\r\n   * @param errorCode\r\n   * @param errorString\r\n   * @param subError\r\n   */\n\n\n  InteractionRequiredAuthError.isInteractionRequiredError = function (errorCode, errorString, subError) {\n    var isInteractionRequiredErrorCode = !!errorCode && InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\n    var isInteractionRequiredSubError = !!subError && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n    var isInteractionRequiredErrorDesc = !!errorString && InteractionRequiredServerErrorMessage.some(function (irErrorCode) {\n      return errorString.indexOf(irErrorCode) > -1;\n    });\n    return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\n  };\n  /**\r\n   * Creates an error thrown when the authorization code required for a token request is null or empty.\r\n   */\n\n\n  InteractionRequiredAuthError.createNoTokensFoundError = function () {\n    return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.noTokensFoundError.code, InteractionRequiredAuthErrorMessage.noTokensFoundError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the native broker returns ACCOUNT_UNAVAILABLE status, indicating that the account was removed and interactive sign-in is required\r\n   * @returns\r\n   */\n\n\n  InteractionRequiredAuthError.createNativeAccountUnavailableError = function () {\n    return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.native_account_unavailable.code, InteractionRequiredAuthErrorMessage.native_account_unavailable.desc);\n  };\n\n  return InteractionRequiredAuthError;\n}(AuthError);\n\nexport { InteractionRequiredAuthError, InteractionRequiredAuthErrorMessage, InteractionRequiredAuthSubErrorMessage, InteractionRequiredServerErrorMessage };","map":{"version":3,"mappings":";;;;;;AAAA;;;AAGG;;AAKH;;AAEG;;AACU,yCAAqC,GAAG,CACjD,sBADiD,EAEjD,kBAFiD,EAGjD,gBAHiD,CAAxC;AAMA,0CAAsC,GAAG,CAClD,cADkD,EAElD,mBAFkD,EAGlD,cAHkD,EAIlD,uBAJkD,EAKlD,kBALkD,CAAzC;AAQb;;AAEG;;AACU,uCAAmC,GAAG;EAC/CA,kBAAkB,EAAE;IAChBC,IAAI,EAAE,iBADU;IAEhBC,IAAI,EAAE;EAFU,CAD2B;EAK/CC,0BAA0B,EAAE;IACxBF,IAAI,EAAE,4BADkB;IAExBC,IAAI,EAAE;EAFkB;AALmB,CAAtC;AAWb;;AAEG;;AACH;AAAA;AAAA;EAAkDE,SAAS,sCAAT;;EAsB9C,sCAAYC,SAAZ,EAAgCC,YAAhC,EAAuDC,QAAvD,EAA0EC,SAA1E,EAA8FC,OAA9F,EAAgHC,aAAhH,EAAwIC,MAAxI,EAAuJ;IAAvJ,YACIC,kBAAMP,SAAN,EAAiBC,YAAjB,EAA+BC,QAA/B,KAQH,IATD;;IAEIM,MAAM,CAACC,cAAP,CAAsBC,KAAtB,EAA4BC,4BAA4B,CAACC,SAAzD;IAEAF,KAAI,CAACP,SAAL,GAAiBA,SAAS,IAAIU,SAAS,CAACC,YAAxC;IACAJ,KAAI,CAACN,OAAL,GAAeA,OAAO,IAAIS,SAAS,CAACC,YAApC;IACAJ,KAAI,CAACL,aAAL,GAAqBA,aAAa,IAAIQ,SAAS,CAACC,YAAhD;IACAJ,KAAI,CAACJ,MAAL,GAAcA,MAAM,IAAIO,SAAS,CAACC,YAAlC;IACAJ,KAAI,CAACK,IAAL,GAAY,8BAAZ;;EACH;EAED;;;;;AAKG;;;EACIJ,0DAAP,UAAkCX,SAAlC,EAAsDgB,WAAtD,EAA4Ed,QAA5E,EAA6F;IACzF,IAAMe,8BAA8B,GAAG,CAAC,CAACjB,SAAF,IAAekB,qCAAqC,CAACC,OAAtC,CAA8CnB,SAA9C,IAA2D,CAAC,CAAlH;IACA,IAAMoB,6BAA6B,GAAG,CAAC,CAAClB,QAAF,IAAcmB,sCAAsC,CAACF,OAAvC,CAA+CjB,QAA/C,IAA2D,CAAC,CAAhH;IACA,IAAMoB,8BAA8B,GAAG,CAAC,CAACN,WAAF,IAAiBE,qCAAqC,CAACK,IAAtC,CAA2C,UAACC,WAAD,EAAY;MAC3G,OAAOR,WAAW,CAACG,OAAZ,CAAoBK,WAApB,IAAmC,CAAC,CAA3C;IACH,CAFuD,CAAxD;IAIA,OAAOP,8BAA8B,IAAIK,8BAAlC,IAAoEF,6BAA3E;EACH,CARM;EAUP;;AAEG;;;EACIT,wDAAP;IACI,OAAO,IAAIA,4BAAJ,CAAiCc,mCAAmC,CAAC9B,kBAApC,CAAuDC,IAAxF,EAA8F6B,mCAAmC,CAAC9B,kBAApC,CAAuDE,IAArJ,CAAP;EACH,CAFM;EAIP;;;AAGG;;;EACIc,mEAAP;IACI,OAAO,IAAIA,4BAAJ,CAAiCc,mCAAmC,CAAC3B,0BAApC,CAA+DF,IAAhG,EAAsG6B,mCAAmC,CAAC3B,0BAApC,CAA+DD,IAArK,CAAP;EACH,CAFM;;EAGX,OAACc,4BAAD;AA/DA,EAAkDe,SAAlD","names":["noTokensFoundError","code","desc","native_account_unavailable","__extends","errorCode","errorMessage","subError","timestamp","traceId","correlationId","claims","_super","Object","setPrototypeOf","_this","InteractionRequiredAuthError","prototype","Constants","EMPTY_STRING","name","errorString","isInteractionRequiredErrorCode","InteractionRequiredServerErrorMessage","indexOf","isInteractionRequiredSubError","InteractionRequiredAuthSubErrorMessage","isInteractionRequiredErrorDesc","some","irErrorCode","InteractionRequiredAuthErrorMessage","AuthError"],"sources":["/Users/edwardlee/Downloads/msal-react-demo/node_modules/@azure/msal-common/src/error/InteractionRequiredAuthError.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"../utils/Constants\";\nimport { AuthError } from \"./AuthError\";\n\n/**\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\n */\nexport const InteractionRequiredServerErrorMessage = [\n    \"interaction_required\",\n    \"consent_required\",\n    \"login_required\"\n];\n\nexport const InteractionRequiredAuthSubErrorMessage = [\n    \"message_only\",\n    \"additional_action\",\n    \"basic_action\",\n    \"user_password_expired\",\n    \"consent_required\"\n];\n\n/**\n * Interaction required errors defined by the SDK\n */\nexport const InteractionRequiredAuthErrorMessage = {\n    noTokensFoundError: {\n        code: \"no_tokens_found\",\n        desc: \"No refresh token found in the cache. Please sign-in.\"\n    },\n    native_account_unavailable: {\n        code: \"native_account_unavailable\",\n        desc: \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\"\n    }\n};\n\n/**\n * Error thrown when user interaction is required.\n */\nexport class InteractionRequiredAuthError extends AuthError {\n    /**\n     * The time the error occured at\n     */\n    timestamp: string;\n\n    /**\n     * TraceId associated with the error\n     */\n    traceId: string;\n\n    /**\n     * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-common/docs/claims-challenge.md\n     * \n     * A string with extra claims needed for the token request to succeed\n     * web site: redirect the user to the authorization page and set the extra claims\n     * web api: include the claims in the WWW-Authenticate header that are sent back to the client so that it knows to request a token with the extra claims\n     * desktop application or browser context: include the claims when acquiring the token interactively\n     * app to app context (client_credentials): include the claims in the AcquireTokenByClientCredential request\n     */\n    claims: string;\n\n    constructor(errorCode?: string, errorMessage?: string, subError?: string, timestamp?: string, traceId?: string, correlationId?: string, claims?: string) {\n        super(errorCode, errorMessage, subError);\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\n        \n        this.timestamp = timestamp || Constants.EMPTY_STRING;\n        this.traceId = traceId || Constants.EMPTY_STRING;\n        this.correlationId = correlationId || Constants.EMPTY_STRING;\n        this.claims = claims || Constants.EMPTY_STRING;\n        this.name = \"InteractionRequiredAuthError\";\n    }\n\n    /**\n     * Helper function used to determine if an error thrown by the server requires interaction to resolve\n     * @param errorCode \n     * @param errorString \n     * @param subError \n     */\n    static isInteractionRequiredError(errorCode?: string, errorString?: string, subError?: string): boolean {\n        const isInteractionRequiredErrorCode = !!errorCode && InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\n        const isInteractionRequiredSubError = !!subError && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n        const isInteractionRequiredErrorDesc = !!errorString && InteractionRequiredServerErrorMessage.some((irErrorCode) => {\n            return errorString.indexOf(irErrorCode) > -1;\n        });\n\n        return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\n    }\n\n    /**\n     * Creates an error thrown when the authorization code required for a token request is null or empty.\n     */\n    static createNoTokensFoundError(): InteractionRequiredAuthError {\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.noTokensFoundError.code, InteractionRequiredAuthErrorMessage.noTokensFoundError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the native broker returns ACCOUNT_UNAVAILABLE status, indicating that the account was removed and interactive sign-in is required\n     * @returns \n     */\n    static createNativeAccountUnavailableError(): InteractionRequiredAuthError {\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.native_account_unavailable.code, InteractionRequiredAuthErrorMessage.native_account_unavailable.desc);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}