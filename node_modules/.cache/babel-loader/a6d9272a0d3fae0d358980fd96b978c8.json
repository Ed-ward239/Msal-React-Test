{"ast":null,"code":"/*! @azure/msal-browser v2.37.0 2023-05-01 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { StringUtils, AuthError } from '@azure/msal-common';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\n\nvar BrowserAuthErrorMessage = {\n  pkceNotGenerated: {\n    code: \"pkce_not_created\",\n    desc: \"The PKCE code challenge and verifier could not be generated.\"\n  },\n  cryptoDoesNotExist: {\n    code: \"crypto_nonexistent\",\n    desc: \"The crypto object or function is not available.\"\n  },\n  httpMethodNotImplementedError: {\n    code: \"http_method_not_implemented\",\n    desc: \"The HTTP method given has not been implemented in this library.\"\n  },\n  emptyNavigateUriError: {\n    code: \"empty_navigate_uri\",\n    desc: \"Navigation URI is empty. Please check stack trace for more info.\"\n  },\n  hashEmptyError: {\n    code: \"hash_empty_error\",\n    desc: \"Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. For more visit: aka.ms/msaljs/browser-errors.\"\n  },\n  hashDoesNotContainStateError: {\n    code: \"no_state_in_hash\",\n    desc: \"Hash does not contain state. Please verify that the request originated from msal.\"\n  },\n  hashDoesNotContainKnownPropertiesError: {\n    code: \"hash_does_not_contain_known_properties\",\n    desc: \"Hash does not contain known properites. Please verify that your redirectUri is not changing the hash. For more visit: aka.ms/msaljs/browser-errors.\"\n  },\n  unableToParseStateError: {\n    code: \"unable_to_parse_state\",\n    desc: \"Unable to parse state. Please verify that the request originated from msal.\"\n  },\n  stateInteractionTypeMismatchError: {\n    code: \"state_interaction_type_mismatch\",\n    desc: \"Hash contains state but the interaction type does not match the caller.\"\n  },\n  interactionInProgress: {\n    code: \"interaction_in_progress\",\n    desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.  For more visit: aka.ms/msaljs/browser-errors.\"\n  },\n  popupWindowError: {\n    code: \"popup_window_error\",\n    desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\n  },\n  emptyWindowError: {\n    code: \"empty_window_error\",\n    desc: \"window.open returned null or undefined window object.\"\n  },\n  userCancelledError: {\n    code: \"user_cancelled\",\n    desc: \"User cancelled the flow.\"\n  },\n  monitorPopupTimeoutError: {\n    code: \"monitor_window_timeout\",\n    desc: \"Token acquisition in popup failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\n  },\n  monitorIframeTimeoutError: {\n    code: \"monitor_window_timeout\",\n    desc: \"Token acquisition in iframe failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\n  },\n  redirectInIframeError: {\n    code: \"redirect_in_iframe\",\n    desc: \"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\"\n  },\n  blockTokenRequestsInHiddenIframeError: {\n    code: \"block_iframe_reload\",\n    desc: \"Request was blocked inside an iframe because MSAL detected an authentication response. For more visit: aka.ms/msaljs/browser-errors\"\n  },\n  blockAcquireTokenInPopupsError: {\n    code: \"block_nested_popups\",\n    desc: \"Request was blocked inside a popup because MSAL detected it was running in a popup.\"\n  },\n  iframeClosedPrematurelyError: {\n    code: \"iframe_closed_prematurely\",\n    desc: \"The iframe being monitored was closed prematurely.\"\n  },\n  silentLogoutUnsupportedError: {\n    code: \"silent_logout_unsupported\",\n    desc: \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\"\n  },\n  noAccountError: {\n    code: \"no_account_error\",\n    desc: \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\"\n  },\n  silentPromptValueError: {\n    code: \"silent_prompt_value_error\",\n    desc: \"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.\"\n  },\n  noTokenRequestCacheError: {\n    code: \"no_token_request_cache_error\",\n    desc: \"No token request found in cache.\"\n  },\n  unableToParseTokenRequestCacheError: {\n    code: \"unable_to_parse_token_request_cache_error\",\n    desc: \"The cached token request could not be parsed.\"\n  },\n  noCachedAuthorityError: {\n    code: \"no_cached_authority_error\",\n    desc: \"No cached authority found.\"\n  },\n  authRequestNotSet: {\n    code: \"auth_request_not_set_error\",\n    desc: \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\"\n  },\n  invalidCacheType: {\n    code: \"invalid_cache_type\",\n    desc: \"Invalid cache type\"\n  },\n  notInBrowserEnvironment: {\n    code: \"non_browser_environment\",\n    desc: \"Login and token requests are not supported in non-browser environments.\"\n  },\n  databaseNotOpen: {\n    code: \"database_not_open\",\n    desc: \"Database is not open!\"\n  },\n  noNetworkConnectivity: {\n    code: \"no_network_connectivity\",\n    desc: \"No network connectivity. Check your internet connection.\"\n  },\n  postRequestFailed: {\n    code: \"post_request_failed\",\n    desc: \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\"\n  },\n  getRequestFailed: {\n    code: \"get_request_failed\",\n    desc: \"Network request failed. Please check the network trace to determine root cause.\"\n  },\n  failedToParseNetworkResponse: {\n    code: \"failed_to_parse_response\",\n    desc: \"Failed to parse network response. Check network trace.\"\n  },\n  unableToLoadTokenError: {\n    code: \"unable_to_load_token\",\n    desc: \"Error loading token to cache.\"\n  },\n  signingKeyNotFoundInStorage: {\n    code: \"crypto_key_not_found\",\n    desc: \"Cryptographic Key or Keypair not found in browser storage.\"\n  },\n  authCodeRequired: {\n    code: \"auth_code_required\",\n    desc: \"An authorization code must be provided (as the `code` property on the request) to this flow.\"\n  },\n  authCodeOrNativeAccountRequired: {\n    code: \"auth_code_or_nativeAccountId_required\",\n    desc: \"An authorization code or nativeAccountId must be provided to this flow.\"\n  },\n  spaCodeAndNativeAccountPresent: {\n    code: \"spa_code_and_nativeAccountId_present\",\n    desc: \"Request cannot contain both spa code and native account id.\"\n  },\n  databaseUnavailable: {\n    code: \"database_unavailable\",\n    desc: \"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.\"\n  },\n  unableToAcquireTokenFromNativePlatform: {\n    code: \"unable_to_acquire_token_from_native_platform\",\n    desc: \"Unable to acquire token from native platform. For a list of possible reasons visit aka.ms/msaljs/browser-errors.\"\n  },\n  nativeHandshakeTimeout: {\n    code: \"native_handshake_timeout\",\n    desc: \"Timed out while attempting to establish connection to browser extension\"\n  },\n  nativeExtensionNotInstalled: {\n    code: \"native_extension_not_installed\",\n    desc: \"Native extension is not installed. If you think this is a mistake call the initialize function.\"\n  },\n  nativeConnectionNotEstablished: {\n    code: \"native_connection_not_established\",\n    desc: \"Connection to native platform has not been established. Please install a compatible browser extension and run initialize(). For more please visit aka.ms/msaljs/browser-errors.\"\n  },\n  nativeBrokerCalledBeforeInitialize: {\n    code: \"native_broker_called_before_initialize\",\n    desc: \"You must call and await the initialize function before attempting to call any other MSAL API when native brokering is enabled. For more please visit aka.ms/msaljs/browser-errors.\"\n  },\n  nativePromptNotSupported: {\n    code: \"native_prompt_not_supported\",\n    desc: \"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.\"\n  }\n};\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\n\nvar BrowserAuthError =\n/** @class */\nfunction (_super) {\n  __extends(BrowserAuthError, _super);\n\n  function BrowserAuthError(errorCode, errorMessage) {\n    var _this = _super.call(this, errorCode, errorMessage) || this;\n\n    Object.setPrototypeOf(_this, BrowserAuthError.prototype);\n    _this.name = \"BrowserAuthError\";\n    return _this;\n  }\n  /**\r\n   * Creates an error thrown when PKCE is not implemented.\r\n   * @param errDetail\r\n   */\n\n\n  BrowserAuthError.createPkceNotGeneratedError = function (errDetail) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code, BrowserAuthErrorMessage.pkceNotGenerated.desc + \" Detail:\" + errDetail);\n  };\n  /**\r\n   * Creates an error thrown when the crypto object is unavailable.\r\n   * @param errDetail\r\n   */\n\n\n  BrowserAuthError.createCryptoNotAvailableError = function (errDetail) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code, BrowserAuthErrorMessage.cryptoDoesNotExist.desc + \" Detail:\" + errDetail);\n  };\n  /**\r\n   * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\r\n   * @param method\r\n   */\n\n\n  BrowserAuthError.createHttpMethodNotImplementedError = function (method) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code, BrowserAuthErrorMessage.httpMethodNotImplementedError.desc + \" Given Method: \" + method);\n  };\n  /**\r\n   * Creates an error thrown when the navigation URI is empty.\r\n   */\n\n\n  BrowserAuthError.createEmptyNavigationUriError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the hash string value is unexpectedly empty.\r\n   * @param hashValue\r\n   */\n\n\n  BrowserAuthError.createEmptyHashError = function (hashValue) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, BrowserAuthErrorMessage.hashEmptyError.desc + \" Given Url: \" + hashValue);\n  };\n  /**\r\n   * Creates an error thrown when the hash string value is unexpectedly empty.\r\n   */\n\n\n  BrowserAuthError.createHashDoesNotContainStateError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainStateError.code, BrowserAuthErrorMessage.hashDoesNotContainStateError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the hash string value does not contain known properties\r\n   */\n\n\n  BrowserAuthError.createHashDoesNotContainKnownPropertiesError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.code, BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the hash string value is unexpectedly empty.\r\n   */\n\n\n  BrowserAuthError.createUnableToParseStateError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseStateError.code, BrowserAuthErrorMessage.unableToParseStateError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the state value in the hash does not match the interaction type of the API attempting to consume it.\r\n   */\n\n\n  BrowserAuthError.createStateInteractionTypeMismatchError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.stateInteractionTypeMismatchError.code, BrowserAuthErrorMessage.stateInteractionTypeMismatchError.desc);\n  };\n  /**\r\n   * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\r\n   */\n\n\n  BrowserAuthError.createInteractionInProgressError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\n  };\n  /**\r\n   * Creates an error thrown when the popup window could not be opened.\r\n   * @param errDetail\r\n   */\n\n\n  BrowserAuthError.createPopupWindowError = function (errDetail) {\n    var errorMessage = BrowserAuthErrorMessage.popupWindowError.desc;\n    errorMessage = !StringUtils.isEmpty(errDetail) ? errorMessage + \" Details: \" + errDetail : errorMessage;\n    return new BrowserAuthError(BrowserAuthErrorMessage.popupWindowError.code, errorMessage);\n  };\n  /**\r\n   * Creates an error thrown when window.open returns an empty window object.\r\n   * @param errDetail\r\n   */\n\n\n  BrowserAuthError.createEmptyWindowCreatedError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the user closes a popup.\r\n   */\n\n\n  BrowserAuthError.createUserCancelledError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code, BrowserAuthErrorMessage.userCancelledError.desc);\n  };\n  /**\r\n   * Creates an error thrown when monitorPopupFromHash times out for a given popup.\r\n   */\n\n\n  BrowserAuthError.createMonitorPopupTimeoutError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.monitorPopupTimeoutError.code, BrowserAuthErrorMessage.monitorPopupTimeoutError.desc);\n  };\n  /**\r\n   * Creates an error thrown when monitorIframeFromHash times out for a given iframe.\r\n   */\n\n\n  BrowserAuthError.createMonitorIframeTimeoutError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.monitorIframeTimeoutError.code, BrowserAuthErrorMessage.monitorIframeTimeoutError.desc);\n  };\n  /**\r\n   * Creates an error thrown when navigateWindow is called inside an iframe or brokered applications.\r\n   * @param windowParentCheck\r\n   */\n\n\n  BrowserAuthError.createRedirectInIframeError = function (windowParentCheck) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code, BrowserAuthErrorMessage.redirectInIframeError.desc + \" (window.parent !== window) => \" + windowParentCheck);\n  };\n  /**\r\n   * Creates an error thrown when an auth reload is done inside an iframe.\r\n   */\n\n\n  BrowserAuthError.createBlockReloadInHiddenIframeError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.code, BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.desc);\n  };\n  /**\r\n   * Creates an error thrown when a popup attempts to call an acquireToken API\r\n   * @returns\r\n   */\n\n\n  BrowserAuthError.createBlockAcquireTokenInPopupsError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.code, BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.desc);\n  };\n  /**\r\n   * Creates an error thrown when an iframe is found to be closed before the timeout is reached.\r\n   */\n\n\n  BrowserAuthError.createIframeClosedPrematurelyError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.iframeClosedPrematurelyError.code, BrowserAuthErrorMessage.iframeClosedPrematurelyError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the logout API is called on any of the silent interaction clients\r\n   */\n\n\n  BrowserAuthError.createSilentLogoutUnsupportedError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.silentLogoutUnsupportedError.code, BrowserAuthErrorMessage.silentLogoutUnsupportedError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the account object is not provided in the acquireTokenSilent API.\r\n   */\n\n\n  BrowserAuthError.createNoAccountError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.noAccountError.code, BrowserAuthErrorMessage.noAccountError.desc);\n  };\n  /**\r\n   * Creates an error thrown when a given prompt value is invalid for silent requests.\r\n   */\n\n\n  BrowserAuthError.createSilentPromptValueError = function (givenPrompt) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.silentPromptValueError.code, BrowserAuthErrorMessage.silentPromptValueError.desc + \" Given value: \" + givenPrompt);\n  };\n  /**\r\n   * Creates an error thrown when the cached token request could not be retrieved from the cache\r\n   */\n\n\n  BrowserAuthError.createUnableToParseTokenRequestCacheError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.code, BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the token request could not be retrieved from the cache\r\n   */\n\n\n  BrowserAuthError.createNoTokenRequestCacheError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.noTokenRequestCacheError.code, BrowserAuthErrorMessage.noTokenRequestCacheError.desc);\n  };\n  /**\r\n   * Creates an error thrown when handleCodeResponse is called before initiateAuthRequest (InteractionHandler)\r\n   */\n\n\n  BrowserAuthError.createAuthRequestNotSetError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.authRequestNotSet.code, BrowserAuthErrorMessage.authRequestNotSet.desc);\n  };\n  /**\r\n   * Creates an error thrown when the authority could not be retrieved from the cache\r\n   */\n\n\n  BrowserAuthError.createNoCachedAuthorityError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.noCachedAuthorityError.code, BrowserAuthErrorMessage.noCachedAuthorityError.desc);\n  };\n  /**\r\n   * Creates an error thrown if cache type is invalid.\r\n   */\n\n\n  BrowserAuthError.createInvalidCacheTypeError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.invalidCacheType.code, \"\" + BrowserAuthErrorMessage.invalidCacheType.desc);\n  };\n  /**\r\n   * Create an error thrown when login and token requests are made from a non-browser environment\r\n   */\n\n\n  BrowserAuthError.createNonBrowserEnvironmentError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.notInBrowserEnvironment.code, BrowserAuthErrorMessage.notInBrowserEnvironment.desc);\n  };\n  /**\r\n   * Create an error thrown when indexDB database is not open\r\n   */\n\n\n  BrowserAuthError.createDatabaseNotOpenError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.databaseNotOpen.code, BrowserAuthErrorMessage.databaseNotOpen.desc);\n  };\n  /**\r\n   * Create an error thrown when token fetch fails due to no internet\r\n   */\n\n\n  BrowserAuthError.createNoNetworkConnectivityError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.noNetworkConnectivity.code, BrowserAuthErrorMessage.noNetworkConnectivity.desc);\n  };\n  /**\r\n   * Create an error thrown when token fetch fails due to reasons other than internet connectivity\r\n   */\n\n\n  BrowserAuthError.createPostRequestFailedError = function (errorDesc, endpoint) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.postRequestFailed.code, BrowserAuthErrorMessage.postRequestFailed.desc + \" | Network client threw: \" + errorDesc + \" | Attempted to reach: \" + endpoint.split(\"?\")[0]);\n  };\n  /**\r\n   * Create an error thrown when get request fails due to reasons other than internet connectivity\r\n   */\n\n\n  BrowserAuthError.createGetRequestFailedError = function (errorDesc, endpoint) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.getRequestFailed.code, BrowserAuthErrorMessage.getRequestFailed.desc + \" | Network client threw: \" + errorDesc + \" | Attempted to reach: \" + endpoint.split(\"?\")[0]);\n  };\n  /**\r\n   * Create an error thrown when network client fails to parse network response\r\n   */\n\n\n  BrowserAuthError.createFailedToParseNetworkResponseError = function (endpoint) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.failedToParseNetworkResponse.code, BrowserAuthErrorMessage.failedToParseNetworkResponse.desc + \" | Attempted to reach: \" + endpoint.split(\"?\")[0]);\n  };\n  /**\r\n   * Create an error thrown when the necessary information is not available to sideload tokens\r\n   */\n\n\n  BrowserAuthError.createUnableToLoadTokenError = function (errorDetail) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.unableToLoadTokenError.code, BrowserAuthErrorMessage.unableToLoadTokenError.desc + \" | \" + errorDetail);\n  };\n  /**\r\n   * Create an error thrown when the queried cryptographic key is not found in IndexedDB\r\n   */\n\n\n  BrowserAuthError.createSigningKeyNotFoundInStorageError = function (keyId) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.signingKeyNotFoundInStorage.code, BrowserAuthErrorMessage.signingKeyNotFoundInStorage.desc + \" | No match found for KeyId: \" + keyId);\n  };\n  /**\r\n   * Create an error when an authorization code is required but not provided\r\n   */\n\n\n  BrowserAuthError.createAuthCodeRequiredError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.authCodeRequired.code, BrowserAuthErrorMessage.authCodeRequired.desc);\n  };\n  /**\r\n   * Create an error when an authorization code or native account ID is required but not provided\r\n   */\n\n\n  BrowserAuthError.createAuthCodeOrNativeAccountIdRequiredError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.authCodeOrNativeAccountRequired.code, BrowserAuthErrorMessage.authCodeOrNativeAccountRequired.desc);\n  };\n  /**\r\n   * Create an error when both authorization code and native account ID are provided\r\n   */\n\n\n  BrowserAuthError.createSpaCodeAndNativeAccountIdPresentError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.spaCodeAndNativeAccountPresent.code, BrowserAuthErrorMessage.spaCodeAndNativeAccountPresent.desc);\n  };\n  /**\r\n   * Create an error when IndexedDB is unavailable\r\n   */\n\n\n  BrowserAuthError.createDatabaseUnavailableError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.databaseUnavailable.code, BrowserAuthErrorMessage.databaseUnavailable.desc);\n  };\n  /**\r\n   * Create an error when native token acquisition is not possible\r\n   */\n\n\n  BrowserAuthError.createUnableToAcquireTokenFromNativePlatformError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.unableToAcquireTokenFromNativePlatform.code, BrowserAuthErrorMessage.unableToAcquireTokenFromNativePlatform.desc);\n  };\n  /**\r\n   * Create an error thrown when Handshake with browser extension times out\r\n   */\n\n\n  BrowserAuthError.createNativeHandshakeTimeoutError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.nativeHandshakeTimeout.code, BrowserAuthErrorMessage.nativeHandshakeTimeout.desc);\n  };\n  /**\r\n   * Create an error thrown when browser extension is not installed\r\n   */\n\n\n  BrowserAuthError.createNativeExtensionNotInstalledError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.nativeExtensionNotInstalled.code, BrowserAuthErrorMessage.nativeExtensionNotInstalled.desc);\n  };\n  /**\r\n   * Create an error when native connection has not been established\r\n   * @returns\r\n   */\n\n\n  BrowserAuthError.createNativeConnectionNotEstablishedError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.nativeConnectionNotEstablished.code, BrowserAuthErrorMessage.nativeConnectionNotEstablished.desc);\n  };\n  /**\r\n   * Create an error thrown when the initialize function hasn't been called\r\n   */\n\n\n  BrowserAuthError.createNativeBrokerCalledBeforeInitialize = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.nativeBrokerCalledBeforeInitialize.code, BrowserAuthErrorMessage.nativeBrokerCalledBeforeInitialize.desc);\n  };\n  /**\r\n   * Create an error thrown when requesting a token directly from the native platform with an unsupported prompt parameter e.g. select_account, login or create\r\n   * These requests must go through eSTS to ensure eSTS is aware of the new account\r\n   */\n\n\n  BrowserAuthError.createNativePromptParameterNotSupportedError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.nativePromptNotSupported.code, BrowserAuthErrorMessage.nativePromptNotSupported.desc);\n  };\n\n  return BrowserAuthError;\n}(AuthError);\n\nexport { BrowserAuthError, BrowserAuthErrorMessage };","map":{"version":3,"mappings":"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","names":["BrowserAuthErrorMessage","pkceNotGenerated","code","desc","cryptoDoesNotExist","httpMethodNotImplementedError","emptyNavigateUriError","hashEmptyError","hashDoesNotContainStateError","hashDoesNotContainKnownPropertiesError","unableToParseStateError","stateInteractionTypeMismatchError","interactionInProgress","popupWindowError","emptyWindowError","userCancelledError","monitorPopupTimeoutError","monitorIframeTimeoutError","redirectInIframeError","blockTokenRequestsInHiddenIframeError","blockAcquireTokenInPopupsError","iframeClosedPrematurelyError","silentLogoutUnsupportedError","noAccountError","silentPromptValueError","noTokenRequestCacheError","unableToParseTokenRequestCacheError","noCachedAuthorityError","authRequestNotSet","invalidCacheType","notInBrowserEnvironment","databaseNotOpen","noNetworkConnectivity","postRequestFailed","getRequestFailed","failedToParseNetworkResponse","unableToLoadTokenError","signingKeyNotFoundInStorage","authCodeRequired","authCodeOrNativeAccountRequired","spaCodeAndNativeAccountPresent","databaseUnavailable","unableToAcquireTokenFromNativePlatform","nativeHandshakeTimeout","nativeExtensionNotInstalled","nativeConnectionNotEstablished","nativeBrokerCalledBeforeInitialize","nativePromptNotSupported","__extends","errorCode","errorMessage","_super","Object","setPrototypeOf","_this","BrowserAuthError","prototype","name","errDetail","method","hashValue","StringUtils","isEmpty","windowParentCheck","givenPrompt","errorDesc","endpoint","split","errorDetail","keyId","AuthError"],"sources":["/Users/edwardlee/Downloads/msal-react-demo/node_modules/@azure/msal-browser/src/error/BrowserAuthError.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthError, StringUtils } from \"@azure/msal-common\";\r\n\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nexport const BrowserAuthErrorMessage = {\r\n    pkceNotGenerated: {\r\n        code: \"pkce_not_created\",\r\n        desc: \"The PKCE code challenge and verifier could not be generated.\"\r\n    },\r\n    cryptoDoesNotExist: {\r\n        code: \"crypto_nonexistent\",\r\n        desc: \"The crypto object or function is not available.\"\r\n    },\r\n    httpMethodNotImplementedError: {\r\n        code: \"http_method_not_implemented\",\r\n        desc: \"The HTTP method given has not been implemented in this library.\"\r\n    },\r\n    emptyNavigateUriError: {\r\n        code: \"empty_navigate_uri\",\r\n        desc: \"Navigation URI is empty. Please check stack trace for more info.\"\r\n    },\r\n    hashEmptyError: {\r\n        code: \"hash_empty_error\",\r\n        desc: \"Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. For more visit: aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    hashDoesNotContainStateError: {\r\n        code: \"no_state_in_hash\",\r\n        desc: \"Hash does not contain state. Please verify that the request originated from msal.\"\r\n    },\r\n    hashDoesNotContainKnownPropertiesError: {\r\n        code: \"hash_does_not_contain_known_properties\",\r\n        desc: \"Hash does not contain known properites. Please verify that your redirectUri is not changing the hash. For more visit: aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    unableToParseStateError: {\r\n        code: \"unable_to_parse_state\",\r\n        desc: \"Unable to parse state. Please verify that the request originated from msal.\"\r\n    },\r\n    stateInteractionTypeMismatchError: {\r\n        code: \"state_interaction_type_mismatch\",\r\n        desc: \"Hash contains state but the interaction type does not match the caller.\"\r\n    },\r\n    interactionInProgress: {\r\n        code: \"interaction_in_progress\",\r\n        desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.  For more visit: aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    popupWindowError: {\r\n        code: \"popup_window_error\",\r\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\r\n    },\r\n    emptyWindowError: {\r\n        code: \"empty_window_error\",\r\n        desc: \"window.open returned null or undefined window object.\"\r\n    },\r\n    userCancelledError: {\r\n        code: \"user_cancelled\",\r\n        desc: \"User cancelled the flow.\"\r\n    },\r\n    monitorPopupTimeoutError: {\r\n        code: \"monitor_window_timeout\",\r\n        desc: \"Token acquisition in popup failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    monitorIframeTimeoutError: {\r\n        code: \"monitor_window_timeout\",\r\n        desc: \"Token acquisition in iframe failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    redirectInIframeError: {\r\n        code: \"redirect_in_iframe\",\r\n        desc: \"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\"\r\n    },\r\n    blockTokenRequestsInHiddenIframeError: {\r\n        code: \"block_iframe_reload\",\r\n        desc: \"Request was blocked inside an iframe because MSAL detected an authentication response. For more visit: aka.ms/msaljs/browser-errors\"\r\n    },\r\n    blockAcquireTokenInPopupsError: {\r\n        code: \"block_nested_popups\",\r\n        desc: \"Request was blocked inside a popup because MSAL detected it was running in a popup.\"\r\n    },\r\n    iframeClosedPrematurelyError: {\r\n        code: \"iframe_closed_prematurely\",\r\n        desc: \"The iframe being monitored was closed prematurely.\"\r\n    },\r\n    silentLogoutUnsupportedError: {\r\n        code: \"silent_logout_unsupported\",\r\n        desc: \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\"\r\n    },\r\n    noAccountError: {\r\n        code: \"no_account_error\",\r\n        desc: \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\"\r\n    },\r\n    silentPromptValueError: {\r\n        code: \"silent_prompt_value_error\",\r\n        desc: \"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.\"\r\n    },\r\n    noTokenRequestCacheError: {\r\n        code: \"no_token_request_cache_error\",\r\n        desc: \"No token request found in cache.\"\r\n    },\r\n    unableToParseTokenRequestCacheError: {\r\n        code: \"unable_to_parse_token_request_cache_error\",\r\n        desc: \"The cached token request could not be parsed.\"\r\n    },\r\n    noCachedAuthorityError: {\r\n        code: \"no_cached_authority_error\",\r\n        desc: \"No cached authority found.\"\r\n    },\r\n    authRequestNotSet: {\r\n        code: \"auth_request_not_set_error\",\r\n        desc: \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\"\r\n    },\r\n    invalidCacheType: {\r\n        code: \"invalid_cache_type\",\r\n        desc: \"Invalid cache type\"\r\n    },\r\n    notInBrowserEnvironment: {\r\n        code: \"non_browser_environment\",\r\n        desc: \"Login and token requests are not supported in non-browser environments.\"\r\n    },\r\n    databaseNotOpen: {\r\n        code: \"database_not_open\",\r\n        desc: \"Database is not open!\"\r\n    },\r\n    noNetworkConnectivity: {\r\n        code: \"no_network_connectivity\",\r\n        desc: \"No network connectivity. Check your internet connection.\"\r\n    },\r\n    postRequestFailed: {\r\n        code: \"post_request_failed\",\r\n        desc: \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\"\r\n    },\r\n    getRequestFailed: {\r\n        code: \"get_request_failed\",\r\n        desc: \"Network request failed. Please check the network trace to determine root cause.\"\r\n    },\r\n    failedToParseNetworkResponse: {\r\n        code: \"failed_to_parse_response\",\r\n        desc: \"Failed to parse network response. Check network trace.\"\r\n    },\r\n    unableToLoadTokenError: {\r\n        code: \"unable_to_load_token\",\r\n        desc: \"Error loading token to cache.\"\r\n    },\r\n    signingKeyNotFoundInStorage: {\r\n        code: \"crypto_key_not_found\",\r\n        desc: \"Cryptographic Key or Keypair not found in browser storage.\"\r\n    },\r\n    authCodeRequired: {\r\n        code: \"auth_code_required\",\r\n        desc: \"An authorization code must be provided (as the `code` property on the request) to this flow.\"\r\n    },\r\n    authCodeOrNativeAccountRequired: {\r\n        code: \"auth_code_or_nativeAccountId_required\",\r\n        desc: \"An authorization code or nativeAccountId must be provided to this flow.\"\r\n    },\r\n    spaCodeAndNativeAccountPresent: {\r\n        code: \"spa_code_and_nativeAccountId_present\",\r\n        desc: \"Request cannot contain both spa code and native account id.\"\r\n    },\r\n    databaseUnavailable: {\r\n        code: \"database_unavailable\",\r\n        desc: \"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.\"\r\n    },\r\n    unableToAcquireTokenFromNativePlatform: {\r\n        code: \"unable_to_acquire_token_from_native_platform\",\r\n        desc: \"Unable to acquire token from native platform. For a list of possible reasons visit aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    nativeHandshakeTimeout: {\r\n        code: \"native_handshake_timeout\",\r\n        desc: \"Timed out while attempting to establish connection to browser extension\"\r\n    },\r\n    nativeExtensionNotInstalled: {\r\n        code: \"native_extension_not_installed\",\r\n        desc: \"Native extension is not installed. If you think this is a mistake call the initialize function.\"\r\n    },\r\n    nativeConnectionNotEstablished: {\r\n        code: \"native_connection_not_established\",\r\n        desc: \"Connection to native platform has not been established. Please install a compatible browser extension and run initialize(). For more please visit aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    nativeBrokerCalledBeforeInitialize: {\r\n        code: \"native_broker_called_before_initialize\",\r\n        desc: \"You must call and await the initialize function before attempting to call any other MSAL API when native brokering is enabled. For more please visit aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    nativePromptNotSupported: {\r\n        code: \"native_prompt_not_supported\",\r\n        desc: \"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.\"\r\n    }\r\n};\r\n\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nexport class BrowserAuthError extends AuthError {\r\n\r\n    constructor(errorCode: string, errorMessage?: string) {\r\n        super(errorCode, errorMessage);\r\n\r\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\r\n        this.name = \"BrowserAuthError\";\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when PKCE is not implemented.\r\n     * @param errDetail\r\n     */\r\n    static createPkceNotGeneratedError(errDetail: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code,\r\n            `${BrowserAuthErrorMessage.pkceNotGenerated.desc} Detail:${errDetail}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the crypto object is unavailable.\r\n     * @param errDetail\r\n     */\r\n    static createCryptoNotAvailableError(errDetail: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code,\r\n            `${BrowserAuthErrorMessage.cryptoDoesNotExist.desc} Detail:${errDetail}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\r\n     * @param method\r\n     */\r\n    static createHttpMethodNotImplementedError(method: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code,\r\n            `${BrowserAuthErrorMessage.httpMethodNotImplementedError.desc} Given Method: ${method}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the navigation URI is empty.\r\n     */\r\n    static createEmptyNavigationUriError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the hash string value is unexpectedly empty.\r\n     * @param hashValue\r\n     */\r\n    static createEmptyHashError(hashValue: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, `${BrowserAuthErrorMessage.hashEmptyError.desc} Given Url: ${hashValue}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the hash string value is unexpectedly empty.\r\n     */\r\n    static createHashDoesNotContainStateError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainStateError.code, BrowserAuthErrorMessage.hashDoesNotContainStateError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the hash string value does not contain known properties\r\n     */\r\n    static createHashDoesNotContainKnownPropertiesError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.code, BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the hash string value is unexpectedly empty.\r\n     */\r\n    static createUnableToParseStateError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseStateError.code, BrowserAuthErrorMessage.unableToParseStateError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the state value in the hash does not match the interaction type of the API attempting to consume it.\r\n     */\r\n    static createStateInteractionTypeMismatchError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.stateInteractionTypeMismatchError.code, BrowserAuthErrorMessage.stateInteractionTypeMismatchError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\r\n     */\r\n    static createInteractionInProgressError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the popup window could not be opened.\r\n     * @param errDetail\r\n     */\r\n    static createPopupWindowError(errDetail?: string): BrowserAuthError {\r\n        let errorMessage = BrowserAuthErrorMessage.popupWindowError.desc;\r\n        errorMessage = !StringUtils.isEmpty(errDetail) ? `${errorMessage} Details: ${errDetail}` : errorMessage;\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.popupWindowError.code, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when window.open returns an empty window object.\r\n     * @param errDetail\r\n     */\r\n    static createEmptyWindowCreatedError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the user closes a popup.\r\n     */\r\n    static createUserCancelledError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code,\r\n            BrowserAuthErrorMessage.userCancelledError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when monitorPopupFromHash times out for a given popup.\r\n     */\r\n    static createMonitorPopupTimeoutError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorPopupTimeoutError.code,\r\n            BrowserAuthErrorMessage.monitorPopupTimeoutError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when monitorIframeFromHash times out for a given iframe.\r\n     */\r\n    static createMonitorIframeTimeoutError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorIframeTimeoutError.code,\r\n            BrowserAuthErrorMessage.monitorIframeTimeoutError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when navigateWindow is called inside an iframe or brokered applications.\r\n     * @param windowParentCheck\r\n     */\r\n    static createRedirectInIframeError(windowParentCheck: boolean): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code,\r\n            `${BrowserAuthErrorMessage.redirectInIframeError.desc} (window.parent !== window) => ${windowParentCheck}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when an auth reload is done inside an iframe.\r\n     */\r\n    static createBlockReloadInHiddenIframeError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.code,\r\n            BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when a popup attempts to call an acquireToken API\r\n     * @returns\r\n     */\r\n    static createBlockAcquireTokenInPopupsError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.code,\r\n            BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when an iframe is found to be closed before the timeout is reached.\r\n     */\r\n    static createIframeClosedPrematurelyError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.iframeClosedPrematurelyError.code, BrowserAuthErrorMessage.iframeClosedPrematurelyError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the logout API is called on any of the silent interaction clients\r\n     */\r\n    static createSilentLogoutUnsupportedError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentLogoutUnsupportedError.code, BrowserAuthErrorMessage.silentLogoutUnsupportedError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the account object is not provided in the acquireTokenSilent API.\r\n     */\r\n    static createNoAccountError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noAccountError.code, BrowserAuthErrorMessage.noAccountError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when a given prompt value is invalid for silent requests.\r\n     */\r\n    static createSilentPromptValueError(givenPrompt: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentPromptValueError.code, `${BrowserAuthErrorMessage.silentPromptValueError.desc} Given value: ${givenPrompt}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the cached token request could not be retrieved from the cache\r\n     */\r\n    static createUnableToParseTokenRequestCacheError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.code,\r\n            BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the token request could not be retrieved from the cache\r\n     */\r\n    static createNoTokenRequestCacheError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noTokenRequestCacheError.code,\r\n            BrowserAuthErrorMessage.noTokenRequestCacheError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when handleCodeResponse is called before initiateAuthRequest (InteractionHandler)\r\n     */\r\n    static createAuthRequestNotSetError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.authRequestNotSet.code,\r\n            BrowserAuthErrorMessage.authRequestNotSet.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the authority could not be retrieved from the cache\r\n     */\r\n    static createNoCachedAuthorityError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noCachedAuthorityError.code,\r\n            BrowserAuthErrorMessage.noCachedAuthorityError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown if cache type is invalid.\r\n     */\r\n    static createInvalidCacheTypeError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.invalidCacheType.code, `${BrowserAuthErrorMessage.invalidCacheType.desc}`);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when login and token requests are made from a non-browser environment\r\n     */\r\n    static createNonBrowserEnvironmentError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.notInBrowserEnvironment.code, BrowserAuthErrorMessage.notInBrowserEnvironment.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when indexDB database is not open\r\n     */\r\n    static createDatabaseNotOpenError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.databaseNotOpen.code, BrowserAuthErrorMessage.databaseNotOpen.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when token fetch fails due to no internet\r\n     */\r\n    static createNoNetworkConnectivityError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noNetworkConnectivity.code, BrowserAuthErrorMessage.noNetworkConnectivity.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when token fetch fails due to reasons other than internet connectivity\r\n     */\r\n    static createPostRequestFailedError(errorDesc: string, endpoint: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.postRequestFailed.code, `${BrowserAuthErrorMessage.postRequestFailed.desc} | Network client threw: ${errorDesc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when get request fails due to reasons other than internet connectivity\r\n     */\r\n    static createGetRequestFailedError(errorDesc: string, endpoint: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.getRequestFailed.code, `${BrowserAuthErrorMessage.getRequestFailed.desc} | Network client threw: ${errorDesc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when network client fails to parse network response\r\n     */\r\n    static createFailedToParseNetworkResponseError(endpoint: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.failedToParseNetworkResponse.code, `${BrowserAuthErrorMessage.failedToParseNetworkResponse.desc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when the necessary information is not available to sideload tokens\r\n     */\r\n    static createUnableToLoadTokenError(errorDetail: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToLoadTokenError.code, `${BrowserAuthErrorMessage.unableToLoadTokenError.desc} | ${errorDetail}`);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when the queried cryptographic key is not found in IndexedDB\r\n     */\r\n    static createSigningKeyNotFoundInStorageError(keyId: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.signingKeyNotFoundInStorage.code, `${BrowserAuthErrorMessage.signingKeyNotFoundInStorage.desc} | No match found for KeyId: ${keyId}`);\r\n    }\r\n\r\n    /**\r\n     * Create an error when an authorization code is required but not provided\r\n     */\r\n    static createAuthCodeRequiredError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.authCodeRequired.code, BrowserAuthErrorMessage.authCodeRequired.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error when an authorization code or native account ID is required but not provided\r\n     */\r\n    static createAuthCodeOrNativeAccountIdRequiredError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.authCodeOrNativeAccountRequired.code, BrowserAuthErrorMessage.authCodeOrNativeAccountRequired.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error when both authorization code and native account ID are provided\r\n     */\r\n    static createSpaCodeAndNativeAccountIdPresentError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.spaCodeAndNativeAccountPresent.code, BrowserAuthErrorMessage.spaCodeAndNativeAccountPresent.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error when IndexedDB is unavailable\r\n     */\r\n    static createDatabaseUnavailableError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.databaseUnavailable.code, BrowserAuthErrorMessage.databaseUnavailable.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error when native token acquisition is not possible\r\n     */\r\n    static createUnableToAcquireTokenFromNativePlatformError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToAcquireTokenFromNativePlatform.code, BrowserAuthErrorMessage.unableToAcquireTokenFromNativePlatform.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when Handshake with browser extension times out\r\n     */\r\n    static createNativeHandshakeTimeoutError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeHandshakeTimeout.code, BrowserAuthErrorMessage.nativeHandshakeTimeout.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when browser extension is not installed\r\n     */\r\n    static createNativeExtensionNotInstalledError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeExtensionNotInstalled.code, BrowserAuthErrorMessage.nativeExtensionNotInstalled.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error when native connection has not been established\r\n     * @returns\r\n     */\r\n    static createNativeConnectionNotEstablishedError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeConnectionNotEstablished.code, BrowserAuthErrorMessage.nativeConnectionNotEstablished.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when the initialize function hasn't been called\r\n     */\r\n    static createNativeBrokerCalledBeforeInitialize(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeBrokerCalledBeforeInitialize.code, BrowserAuthErrorMessage.nativeBrokerCalledBeforeInitialize.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when requesting a token directly from the native platform with an unsupported prompt parameter e.g. select_account, login or create\r\n     * These requests must go through eSTS to ensure eSTS is aware of the new account\r\n     */\r\n    static createNativePromptParameterNotSupportedError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativePromptNotSupported.code, BrowserAuthErrorMessage.nativePromptNotSupported.desc);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}